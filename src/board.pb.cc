// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "board.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace boards {

namespace {

const ::google::protobuf::Descriptor* RefinedBoard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefinedBoard_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefinedBoard_Coordinates_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefinedBoard_Coordinates_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_board_2eproto() {
  protobuf_AddDesc_board_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "board.proto");
  GOOGLE_CHECK(file != NULL);
  RefinedBoard_descriptor_ = file->message_type(0);
  static const int RefinedBoard_offsets_[33] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, path_to_image_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, case_height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, case_width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, gate_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, trading_post_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, merchant_guild_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, joust_field_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, stables_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, inn_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, fixed_peddler_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, fixed_carpenter_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, goldmine_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, neutral_1_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, neutral_2_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, neutral_3_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, neutral_4_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, neutral_5_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, neutral_6_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, house_height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, house_width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, first_dungeon_house_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, nb_house_line_dungeon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, nb_line_dungeon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, first_walls_house_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, nb_house_line_walls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, nb_line_walls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, first_towers_house_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, nb_house_line_towers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, nb_line_towers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, first_bridge_slot_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, bridge_slots_gap_),
  };
  RefinedBoard_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefinedBoard_descriptor_,
      RefinedBoard::default_instance_,
      RefinedBoard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefinedBoard));
  RefinedBoard_Coordinates_descriptor_ = RefinedBoard_descriptor_->nested_type(0);
  static const int RefinedBoard_Coordinates_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard_Coordinates, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard_Coordinates, y_),
  };
  RefinedBoard_Coordinates_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefinedBoard_Coordinates_descriptor_,
      RefinedBoard_Coordinates::default_instance_,
      RefinedBoard_Coordinates_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard_Coordinates, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefinedBoard_Coordinates, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefinedBoard_Coordinates));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_board_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefinedBoard_descriptor_, &RefinedBoard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefinedBoard_Coordinates_descriptor_, &RefinedBoard_Coordinates::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_board_2eproto() {
  delete RefinedBoard::default_instance_;
  delete RefinedBoard_reflection_;
  delete RefinedBoard_Coordinates::default_instance_;
  delete RefinedBoard_Coordinates_reflection_;
}

void protobuf_AddDesc_board_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013board.proto\022\006boards\"\203\014\n\014RefinedBoard\022\025"
    "\n\rpath_to_image\030\001 \002(\t\022\016\n\006height\030\002 \002(\005\022\r\n"
    "\005width\030\003 \002(\005\022\023\n\013case_height\030\004 \002(\005\022\022\n\ncas"
    "e_width\030\005 \002(\005\0224\n\ngate_coord\030\006 \002(\0132 .boar"
    "ds.RefinedBoard.Coordinates\022<\n\022trading_p"
    "ost_coord\030\007 \002(\0132 .boards.RefinedBoard.Co"
    "ordinates\022>\n\024merchant_guild_coord\030\010 \002(\0132"
    " .boards.RefinedBoard.Coordinates\022;\n\021jou"
    "st_field_coord\030\t \002(\0132 .boards.RefinedBoa"
    "rd.Coordinates\0227\n\rstables_coord\030\n \002(\0132 ."
    "boards.RefinedBoard.Coordinates\0223\n\tinn_c"
    "oord\030\013 \002(\0132 .boards.RefinedBoard.Coordin"
    "ates\022=\n\023fixed_peddler_coord\030\014 \002(\0132 .boar"
    "ds.RefinedBoard.Coordinates\022\?\n\025fixed_car"
    "penter_coord\030\r \002(\0132 .boards.RefinedBoard"
    ".Coordinates\0228\n\016goldmine_coord\030\016 \002(\0132 .b"
    "oards.RefinedBoard.Coordinates\0229\n\017neutra"
    "l_1_coord\030\017 \002(\0132 .boards.RefinedBoard.Co"
    "ordinates\0229\n\017neutral_2_coord\030\020 \002(\0132 .boa"
    "rds.RefinedBoard.Coordinates\0229\n\017neutral_"
    "3_coord\030\021 \002(\0132 .boards.RefinedBoard.Coor"
    "dinates\0229\n\017neutral_4_coord\030\022 \002(\0132 .board"
    "s.RefinedBoard.Coordinates\0229\n\017neutral_5_"
    "coord\030\023 \002(\0132 .boards.RefinedBoard.Coordi"
    "nates\0229\n\017neutral_6_coord\030\024 \002(\0132 .boards."
    "RefinedBoard.Coordinates\022\024\n\014house_height"
    "\030\025 \002(\005\022\023\n\013house_width\030\026 \002(\005\022C\n\031first_dun"
    "geon_house_coord\030\027 \002(\0132 .boards.RefinedB"
    "oard.Coordinates\022\035\n\025nb_house_line_dungeo"
    "n\030\030 \002(\005\022\027\n\017nb_line_dungeon\030\031 \002(\005\022A\n\027firs"
    "t_walls_house_coord\030\032 \002(\0132 .boards.Refin"
    "edBoard.Coordinates\022\033\n\023nb_house_line_wal"
    "ls\030\033 \002(\005\022\025\n\rnb_line_walls\030\034 \002(\005\022B\n\030first"
    "_towers_house_coord\030\035 \002(\0132 .boards.Refin"
    "edBoard.Coordinates\022\034\n\024nb_house_line_tow"
    "ers\030\036 \002(\005\022\026\n\016nb_line_towers\030\037 \002(\005\022A\n\027fir"
    "st_bridge_slot_coord\030  \002(\0132 .boards.Refi"
    "nedBoard.Coordinates\022\030\n\020bridge_slots_gap"
    "\030! \002(\005\032#\n\013Coordinates\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 "
    "\002(\005", 1563);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "board.proto", &protobuf_RegisterTypes);
  RefinedBoard::default_instance_ = new RefinedBoard();
  RefinedBoard_Coordinates::default_instance_ = new RefinedBoard_Coordinates();
  RefinedBoard::default_instance_->InitAsDefaultInstance();
  RefinedBoard_Coordinates::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_board_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_board_2eproto {
  StaticDescriptorInitializer_board_2eproto() {
    protobuf_AddDesc_board_2eproto();
  }
} static_descriptor_initializer_board_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RefinedBoard_Coordinates::kXFieldNumber;
const int RefinedBoard_Coordinates::kYFieldNumber;
#endif  // !_MSC_VER

RefinedBoard_Coordinates::RefinedBoard_Coordinates()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RefinedBoard_Coordinates::InitAsDefaultInstance() {
}

RefinedBoard_Coordinates::RefinedBoard_Coordinates(const RefinedBoard_Coordinates& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RefinedBoard_Coordinates::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefinedBoard_Coordinates::~RefinedBoard_Coordinates() {
  SharedDtor();
}

void RefinedBoard_Coordinates::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefinedBoard_Coordinates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefinedBoard_Coordinates::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefinedBoard_Coordinates_descriptor_;
}

const RefinedBoard_Coordinates& RefinedBoard_Coordinates::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_board_2eproto();  return *default_instance_;
}

RefinedBoard_Coordinates* RefinedBoard_Coordinates::default_instance_ = NULL;

RefinedBoard_Coordinates* RefinedBoard_Coordinates::New() const {
  return new RefinedBoard_Coordinates;
}

void RefinedBoard_Coordinates::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    x_ = 0;
    y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefinedBoard_Coordinates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }
      
      // required int32 y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RefinedBoard_Coordinates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }
  
  // required int32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RefinedBoard_Coordinates::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }
  
  // required int32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RefinedBoard_Coordinates::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }
    
    // required int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefinedBoard_Coordinates::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefinedBoard_Coordinates* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefinedBoard_Coordinates*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefinedBoard_Coordinates::MergeFrom(const RefinedBoard_Coordinates& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefinedBoard_Coordinates::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefinedBoard_Coordinates::CopyFrom(const RefinedBoard_Coordinates& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefinedBoard_Coordinates::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void RefinedBoard_Coordinates::Swap(RefinedBoard_Coordinates* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefinedBoard_Coordinates::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefinedBoard_Coordinates_descriptor_;
  metadata.reflection = RefinedBoard_Coordinates_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int RefinedBoard::kPathToImageFieldNumber;
const int RefinedBoard::kHeightFieldNumber;
const int RefinedBoard::kWidthFieldNumber;
const int RefinedBoard::kCaseHeightFieldNumber;
const int RefinedBoard::kCaseWidthFieldNumber;
const int RefinedBoard::kGateCoordFieldNumber;
const int RefinedBoard::kTradingPostCoordFieldNumber;
const int RefinedBoard::kMerchantGuildCoordFieldNumber;
const int RefinedBoard::kJoustFieldCoordFieldNumber;
const int RefinedBoard::kStablesCoordFieldNumber;
const int RefinedBoard::kInnCoordFieldNumber;
const int RefinedBoard::kFixedPeddlerCoordFieldNumber;
const int RefinedBoard::kFixedCarpenterCoordFieldNumber;
const int RefinedBoard::kGoldmineCoordFieldNumber;
const int RefinedBoard::kNeutral1CoordFieldNumber;
const int RefinedBoard::kNeutral2CoordFieldNumber;
const int RefinedBoard::kNeutral3CoordFieldNumber;
const int RefinedBoard::kNeutral4CoordFieldNumber;
const int RefinedBoard::kNeutral5CoordFieldNumber;
const int RefinedBoard::kNeutral6CoordFieldNumber;
const int RefinedBoard::kHouseHeightFieldNumber;
const int RefinedBoard::kHouseWidthFieldNumber;
const int RefinedBoard::kFirstDungeonHouseCoordFieldNumber;
const int RefinedBoard::kNbHouseLineDungeonFieldNumber;
const int RefinedBoard::kNbLineDungeonFieldNumber;
const int RefinedBoard::kFirstWallsHouseCoordFieldNumber;
const int RefinedBoard::kNbHouseLineWallsFieldNumber;
const int RefinedBoard::kNbLineWallsFieldNumber;
const int RefinedBoard::kFirstTowersHouseCoordFieldNumber;
const int RefinedBoard::kNbHouseLineTowersFieldNumber;
const int RefinedBoard::kNbLineTowersFieldNumber;
const int RefinedBoard::kFirstBridgeSlotCoordFieldNumber;
const int RefinedBoard::kBridgeSlotsGapFieldNumber;
#endif  // !_MSC_VER

RefinedBoard::RefinedBoard()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RefinedBoard::InitAsDefaultInstance() {
  gate_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  trading_post_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  merchant_guild_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  joust_field_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  stables_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  inn_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  fixed_peddler_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  fixed_carpenter_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  goldmine_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  neutral_1_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  neutral_2_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  neutral_3_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  neutral_4_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  neutral_5_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  neutral_6_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  first_dungeon_house_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  first_walls_house_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  first_towers_house_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
  first_bridge_slot_coord_ = const_cast< ::boards::RefinedBoard_Coordinates*>(&::boards::RefinedBoard_Coordinates::default_instance());
}

RefinedBoard::RefinedBoard(const RefinedBoard& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RefinedBoard::SharedCtor() {
  _cached_size_ = 0;
  path_to_image_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  height_ = 0;
  width_ = 0;
  case_height_ = 0;
  case_width_ = 0;
  gate_coord_ = NULL;
  trading_post_coord_ = NULL;
  merchant_guild_coord_ = NULL;
  joust_field_coord_ = NULL;
  stables_coord_ = NULL;
  inn_coord_ = NULL;
  fixed_peddler_coord_ = NULL;
  fixed_carpenter_coord_ = NULL;
  goldmine_coord_ = NULL;
  neutral_1_coord_ = NULL;
  neutral_2_coord_ = NULL;
  neutral_3_coord_ = NULL;
  neutral_4_coord_ = NULL;
  neutral_5_coord_ = NULL;
  neutral_6_coord_ = NULL;
  house_height_ = 0;
  house_width_ = 0;
  first_dungeon_house_coord_ = NULL;
  nb_house_line_dungeon_ = 0;
  nb_line_dungeon_ = 0;
  first_walls_house_coord_ = NULL;
  nb_house_line_walls_ = 0;
  nb_line_walls_ = 0;
  first_towers_house_coord_ = NULL;
  nb_house_line_towers_ = 0;
  nb_line_towers_ = 0;
  first_bridge_slot_coord_ = NULL;
  bridge_slots_gap_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefinedBoard::~RefinedBoard() {
  SharedDtor();
}

void RefinedBoard::SharedDtor() {
  if (path_to_image_ != &::google::protobuf::internal::kEmptyString) {
    delete path_to_image_;
  }
  if (this != default_instance_) {
    delete gate_coord_;
    delete trading_post_coord_;
    delete merchant_guild_coord_;
    delete joust_field_coord_;
    delete stables_coord_;
    delete inn_coord_;
    delete fixed_peddler_coord_;
    delete fixed_carpenter_coord_;
    delete goldmine_coord_;
    delete neutral_1_coord_;
    delete neutral_2_coord_;
    delete neutral_3_coord_;
    delete neutral_4_coord_;
    delete neutral_5_coord_;
    delete neutral_6_coord_;
    delete first_dungeon_house_coord_;
    delete first_walls_house_coord_;
    delete first_towers_house_coord_;
    delete first_bridge_slot_coord_;
  }
}

void RefinedBoard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefinedBoard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefinedBoard_descriptor_;
}

const RefinedBoard& RefinedBoard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_board_2eproto();  return *default_instance_;
}

RefinedBoard* RefinedBoard::default_instance_ = NULL;

RefinedBoard* RefinedBoard::New() const {
  return new RefinedBoard;
}

void RefinedBoard::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path_to_image()) {
      if (path_to_image_ != &::google::protobuf::internal::kEmptyString) {
        path_to_image_->clear();
      }
    }
    height_ = 0;
    width_ = 0;
    case_height_ = 0;
    case_width_ = 0;
    if (has_gate_coord()) {
      if (gate_coord_ != NULL) gate_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_trading_post_coord()) {
      if (trading_post_coord_ != NULL) trading_post_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_merchant_guild_coord()) {
      if (merchant_guild_coord_ != NULL) merchant_guild_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_joust_field_coord()) {
      if (joust_field_coord_ != NULL) joust_field_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_stables_coord()) {
      if (stables_coord_ != NULL) stables_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_inn_coord()) {
      if (inn_coord_ != NULL) inn_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_fixed_peddler_coord()) {
      if (fixed_peddler_coord_ != NULL) fixed_peddler_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_fixed_carpenter_coord()) {
      if (fixed_carpenter_coord_ != NULL) fixed_carpenter_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_goldmine_coord()) {
      if (goldmine_coord_ != NULL) goldmine_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_neutral_1_coord()) {
      if (neutral_1_coord_ != NULL) neutral_1_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_neutral_2_coord()) {
      if (neutral_2_coord_ != NULL) neutral_2_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_neutral_3_coord()) {
      if (neutral_3_coord_ != NULL) neutral_3_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_neutral_4_coord()) {
      if (neutral_4_coord_ != NULL) neutral_4_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_neutral_5_coord()) {
      if (neutral_5_coord_ != NULL) neutral_5_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    if (has_neutral_6_coord()) {
      if (neutral_6_coord_ != NULL) neutral_6_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    house_height_ = 0;
    house_width_ = 0;
    if (has_first_dungeon_house_coord()) {
      if (first_dungeon_house_coord_ != NULL) first_dungeon_house_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    nb_house_line_dungeon_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    nb_line_dungeon_ = 0;
    if (has_first_walls_house_coord()) {
      if (first_walls_house_coord_ != NULL) first_walls_house_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    nb_house_line_walls_ = 0;
    nb_line_walls_ = 0;
    if (has_first_towers_house_coord()) {
      if (first_towers_house_coord_ != NULL) first_towers_house_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
    nb_house_line_towers_ = 0;
    nb_line_towers_ = 0;
    if (has_first_bridge_slot_coord()) {
      if (first_bridge_slot_coord_ != NULL) first_bridge_slot_coord_->::boards::RefinedBoard_Coordinates::Clear();
    }
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    bridge_slots_gap_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefinedBoard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path_to_image = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path_to_image()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path_to_image().data(), this->path_to_image().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_height;
        break;
      }
      
      // required int32 height = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_width;
        break;
      }
      
      // required int32 width = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_case_height;
        break;
      }
      
      // required int32 case_height = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_case_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &case_height_)));
          set_has_case_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_case_width;
        break;
      }
      
      // required int32 case_width = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_case_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &case_width_)));
          set_has_case_width();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_gate_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates gate_coord = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gate_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gate_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_trading_post_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates trading_post_coord = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trading_post_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trading_post_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_merchant_guild_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates merchant_guild_coord = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_merchant_guild_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_merchant_guild_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_joust_field_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates joust_field_coord = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_joust_field_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_joust_field_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_stables_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates stables_coord = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stables_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stables_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_inn_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates inn_coord = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inn_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inn_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_fixed_peddler_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates fixed_peddler_coord = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fixed_peddler_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fixed_peddler_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_fixed_carpenter_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates fixed_carpenter_coord = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fixed_carpenter_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fixed_carpenter_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_goldmine_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates goldmine_coord = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goldmine_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goldmine_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_neutral_1_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates neutral_1_coord = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_neutral_1_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_neutral_1_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_neutral_2_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates neutral_2_coord = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_neutral_2_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_neutral_2_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_neutral_3_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates neutral_3_coord = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_neutral_3_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_neutral_3_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_neutral_4_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates neutral_4_coord = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_neutral_4_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_neutral_4_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_neutral_5_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates neutral_5_coord = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_neutral_5_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_neutral_5_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_neutral_6_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates neutral_6_coord = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_neutral_6_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_neutral_6_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_house_height;
        break;
      }
      
      // required int32 house_height = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_house_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &house_height_)));
          set_has_house_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_house_width;
        break;
      }
      
      // required int32 house_width = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_house_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &house_width_)));
          set_has_house_width();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_first_dungeon_house_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates first_dungeon_house_coord = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_dungeon_house_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_dungeon_house_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_nb_house_line_dungeon;
        break;
      }
      
      // required int32 nb_house_line_dungeon = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nb_house_line_dungeon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nb_house_line_dungeon_)));
          set_has_nb_house_line_dungeon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_nb_line_dungeon;
        break;
      }
      
      // required int32 nb_line_dungeon = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nb_line_dungeon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nb_line_dungeon_)));
          set_has_nb_line_dungeon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_first_walls_house_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates first_walls_house_coord = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_walls_house_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_walls_house_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_nb_house_line_walls;
        break;
      }
      
      // required int32 nb_house_line_walls = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nb_house_line_walls:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nb_house_line_walls_)));
          set_has_nb_house_line_walls();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_nb_line_walls;
        break;
      }
      
      // required int32 nb_line_walls = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nb_line_walls:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nb_line_walls_)));
          set_has_nb_line_walls();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_first_towers_house_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates first_towers_house_coord = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_towers_house_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_towers_house_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_nb_house_line_towers;
        break;
      }
      
      // required int32 nb_house_line_towers = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nb_house_line_towers:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nb_house_line_towers_)));
          set_has_nb_house_line_towers();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_nb_line_towers;
        break;
      }
      
      // required int32 nb_line_towers = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nb_line_towers:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nb_line_towers_)));
          set_has_nb_line_towers();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(258)) goto parse_first_bridge_slot_coord;
        break;
      }
      
      // required .boards.RefinedBoard.Coordinates first_bridge_slot_coord = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_bridge_slot_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_bridge_slot_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_bridge_slots_gap;
        break;
      }
      
      // required int32 bridge_slots_gap = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bridge_slots_gap:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bridge_slots_gap_)));
          set_has_bridge_slots_gap();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RefinedBoard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path_to_image = 1;
  if (has_path_to_image()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path_to_image().data(), this->path_to_image().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path_to_image(), output);
  }
  
  // required int32 height = 2;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->height(), output);
  }
  
  // required int32 width = 3;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }
  
  // required int32 case_height = 4;
  if (has_case_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->case_height(), output);
  }
  
  // required int32 case_width = 5;
  if (has_case_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->case_width(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates gate_coord = 6;
  if (has_gate_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->gate_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates trading_post_coord = 7;
  if (has_trading_post_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->trading_post_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates merchant_guild_coord = 8;
  if (has_merchant_guild_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->merchant_guild_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates joust_field_coord = 9;
  if (has_joust_field_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->joust_field_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates stables_coord = 10;
  if (has_stables_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->stables_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates inn_coord = 11;
  if (has_inn_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->inn_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates fixed_peddler_coord = 12;
  if (has_fixed_peddler_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->fixed_peddler_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates fixed_carpenter_coord = 13;
  if (has_fixed_carpenter_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->fixed_carpenter_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates goldmine_coord = 14;
  if (has_goldmine_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->goldmine_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_1_coord = 15;
  if (has_neutral_1_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->neutral_1_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_2_coord = 16;
  if (has_neutral_2_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->neutral_2_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_3_coord = 17;
  if (has_neutral_3_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->neutral_3_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_4_coord = 18;
  if (has_neutral_4_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->neutral_4_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_5_coord = 19;
  if (has_neutral_5_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->neutral_5_coord(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_6_coord = 20;
  if (has_neutral_6_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->neutral_6_coord(), output);
  }
  
  // required int32 house_height = 21;
  if (has_house_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->house_height(), output);
  }
  
  // required int32 house_width = 22;
  if (has_house_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->house_width(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates first_dungeon_house_coord = 23;
  if (has_first_dungeon_house_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->first_dungeon_house_coord(), output);
  }
  
  // required int32 nb_house_line_dungeon = 24;
  if (has_nb_house_line_dungeon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->nb_house_line_dungeon(), output);
  }
  
  // required int32 nb_line_dungeon = 25;
  if (has_nb_line_dungeon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->nb_line_dungeon(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates first_walls_house_coord = 26;
  if (has_first_walls_house_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->first_walls_house_coord(), output);
  }
  
  // required int32 nb_house_line_walls = 27;
  if (has_nb_house_line_walls()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->nb_house_line_walls(), output);
  }
  
  // required int32 nb_line_walls = 28;
  if (has_nb_line_walls()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->nb_line_walls(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates first_towers_house_coord = 29;
  if (has_first_towers_house_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->first_towers_house_coord(), output);
  }
  
  // required int32 nb_house_line_towers = 30;
  if (has_nb_house_line_towers()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->nb_house_line_towers(), output);
  }
  
  // required int32 nb_line_towers = 31;
  if (has_nb_line_towers()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->nb_line_towers(), output);
  }
  
  // required .boards.RefinedBoard.Coordinates first_bridge_slot_coord = 32;
  if (has_first_bridge_slot_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->first_bridge_slot_coord(), output);
  }
  
  // required int32 bridge_slots_gap = 33;
  if (has_bridge_slots_gap()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->bridge_slots_gap(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RefinedBoard::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path_to_image = 1;
  if (has_path_to_image()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path_to_image().data(), this->path_to_image().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path_to_image(), target);
  }
  
  // required int32 height = 2;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->height(), target);
  }
  
  // required int32 width = 3;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }
  
  // required int32 case_height = 4;
  if (has_case_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->case_height(), target);
  }
  
  // required int32 case_width = 5;
  if (has_case_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->case_width(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates gate_coord = 6;
  if (has_gate_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->gate_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates trading_post_coord = 7;
  if (has_trading_post_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->trading_post_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates merchant_guild_coord = 8;
  if (has_merchant_guild_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->merchant_guild_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates joust_field_coord = 9;
  if (has_joust_field_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->joust_field_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates stables_coord = 10;
  if (has_stables_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->stables_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates inn_coord = 11;
  if (has_inn_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->inn_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates fixed_peddler_coord = 12;
  if (has_fixed_peddler_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->fixed_peddler_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates fixed_carpenter_coord = 13;
  if (has_fixed_carpenter_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->fixed_carpenter_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates goldmine_coord = 14;
  if (has_goldmine_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->goldmine_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_1_coord = 15;
  if (has_neutral_1_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->neutral_1_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_2_coord = 16;
  if (has_neutral_2_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->neutral_2_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_3_coord = 17;
  if (has_neutral_3_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->neutral_3_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_4_coord = 18;
  if (has_neutral_4_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->neutral_4_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_5_coord = 19;
  if (has_neutral_5_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->neutral_5_coord(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates neutral_6_coord = 20;
  if (has_neutral_6_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->neutral_6_coord(), target);
  }
  
  // required int32 house_height = 21;
  if (has_house_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->house_height(), target);
  }
  
  // required int32 house_width = 22;
  if (has_house_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->house_width(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates first_dungeon_house_coord = 23;
  if (has_first_dungeon_house_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->first_dungeon_house_coord(), target);
  }
  
  // required int32 nb_house_line_dungeon = 24;
  if (has_nb_house_line_dungeon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->nb_house_line_dungeon(), target);
  }
  
  // required int32 nb_line_dungeon = 25;
  if (has_nb_line_dungeon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->nb_line_dungeon(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates first_walls_house_coord = 26;
  if (has_first_walls_house_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->first_walls_house_coord(), target);
  }
  
  // required int32 nb_house_line_walls = 27;
  if (has_nb_house_line_walls()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->nb_house_line_walls(), target);
  }
  
  // required int32 nb_line_walls = 28;
  if (has_nb_line_walls()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->nb_line_walls(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates first_towers_house_coord = 29;
  if (has_first_towers_house_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->first_towers_house_coord(), target);
  }
  
  // required int32 nb_house_line_towers = 30;
  if (has_nb_house_line_towers()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->nb_house_line_towers(), target);
  }
  
  // required int32 nb_line_towers = 31;
  if (has_nb_line_towers()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->nb_line_towers(), target);
  }
  
  // required .boards.RefinedBoard.Coordinates first_bridge_slot_coord = 32;
  if (has_first_bridge_slot_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        32, this->first_bridge_slot_coord(), target);
  }
  
  // required int32 bridge_slots_gap = 33;
  if (has_bridge_slots_gap()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->bridge_slots_gap(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RefinedBoard::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path_to_image = 1;
    if (has_path_to_image()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path_to_image());
    }
    
    // required int32 height = 2;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }
    
    // required int32 width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }
    
    // required int32 case_height = 4;
    if (has_case_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->case_height());
    }
    
    // required int32 case_width = 5;
    if (has_case_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->case_width());
    }
    
    // required .boards.RefinedBoard.Coordinates gate_coord = 6;
    if (has_gate_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gate_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates trading_post_coord = 7;
    if (has_trading_post_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->trading_post_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates merchant_guild_coord = 8;
    if (has_merchant_guild_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->merchant_guild_coord());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required .boards.RefinedBoard.Coordinates joust_field_coord = 9;
    if (has_joust_field_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->joust_field_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates stables_coord = 10;
    if (has_stables_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stables_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates inn_coord = 11;
    if (has_inn_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inn_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates fixed_peddler_coord = 12;
    if (has_fixed_peddler_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fixed_peddler_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates fixed_carpenter_coord = 13;
    if (has_fixed_carpenter_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fixed_carpenter_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates goldmine_coord = 14;
    if (has_goldmine_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goldmine_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates neutral_1_coord = 15;
    if (has_neutral_1_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->neutral_1_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates neutral_2_coord = 16;
    if (has_neutral_2_coord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->neutral_2_coord());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required .boards.RefinedBoard.Coordinates neutral_3_coord = 17;
    if (has_neutral_3_coord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->neutral_3_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates neutral_4_coord = 18;
    if (has_neutral_4_coord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->neutral_4_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates neutral_5_coord = 19;
    if (has_neutral_5_coord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->neutral_5_coord());
    }
    
    // required .boards.RefinedBoard.Coordinates neutral_6_coord = 20;
    if (has_neutral_6_coord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->neutral_6_coord());
    }
    
    // required int32 house_height = 21;
    if (has_house_height()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->house_height());
    }
    
    // required int32 house_width = 22;
    if (has_house_width()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->house_width());
    }
    
    // required .boards.RefinedBoard.Coordinates first_dungeon_house_coord = 23;
    if (has_first_dungeon_house_coord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_dungeon_house_coord());
    }
    
    // required int32 nb_house_line_dungeon = 24;
    if (has_nb_house_line_dungeon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nb_house_line_dungeon());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required int32 nb_line_dungeon = 25;
    if (has_nb_line_dungeon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nb_line_dungeon());
    }
    
    // required .boards.RefinedBoard.Coordinates first_walls_house_coord = 26;
    if (has_first_walls_house_coord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_walls_house_coord());
    }
    
    // required int32 nb_house_line_walls = 27;
    if (has_nb_house_line_walls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nb_house_line_walls());
    }
    
    // required int32 nb_line_walls = 28;
    if (has_nb_line_walls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nb_line_walls());
    }
    
    // required .boards.RefinedBoard.Coordinates first_towers_house_coord = 29;
    if (has_first_towers_house_coord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_towers_house_coord());
    }
    
    // required int32 nb_house_line_towers = 30;
    if (has_nb_house_line_towers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nb_house_line_towers());
    }
    
    // required int32 nb_line_towers = 31;
    if (has_nb_line_towers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nb_line_towers());
    }
    
    // required .boards.RefinedBoard.Coordinates first_bridge_slot_coord = 32;
    if (has_first_bridge_slot_coord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_bridge_slot_coord());
    }
    
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // required int32 bridge_slots_gap = 33;
    if (has_bridge_slots_gap()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bridge_slots_gap());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefinedBoard::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefinedBoard* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefinedBoard*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefinedBoard::MergeFrom(const RefinedBoard& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path_to_image()) {
      set_path_to_image(from.path_to_image());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_case_height()) {
      set_case_height(from.case_height());
    }
    if (from.has_case_width()) {
      set_case_width(from.case_width());
    }
    if (from.has_gate_coord()) {
      mutable_gate_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.gate_coord());
    }
    if (from.has_trading_post_coord()) {
      mutable_trading_post_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.trading_post_coord());
    }
    if (from.has_merchant_guild_coord()) {
      mutable_merchant_guild_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.merchant_guild_coord());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_joust_field_coord()) {
      mutable_joust_field_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.joust_field_coord());
    }
    if (from.has_stables_coord()) {
      mutable_stables_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.stables_coord());
    }
    if (from.has_inn_coord()) {
      mutable_inn_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.inn_coord());
    }
    if (from.has_fixed_peddler_coord()) {
      mutable_fixed_peddler_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.fixed_peddler_coord());
    }
    if (from.has_fixed_carpenter_coord()) {
      mutable_fixed_carpenter_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.fixed_carpenter_coord());
    }
    if (from.has_goldmine_coord()) {
      mutable_goldmine_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.goldmine_coord());
    }
    if (from.has_neutral_1_coord()) {
      mutable_neutral_1_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.neutral_1_coord());
    }
    if (from.has_neutral_2_coord()) {
      mutable_neutral_2_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.neutral_2_coord());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_neutral_3_coord()) {
      mutable_neutral_3_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.neutral_3_coord());
    }
    if (from.has_neutral_4_coord()) {
      mutable_neutral_4_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.neutral_4_coord());
    }
    if (from.has_neutral_5_coord()) {
      mutable_neutral_5_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.neutral_5_coord());
    }
    if (from.has_neutral_6_coord()) {
      mutable_neutral_6_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.neutral_6_coord());
    }
    if (from.has_house_height()) {
      set_house_height(from.house_height());
    }
    if (from.has_house_width()) {
      set_house_width(from.house_width());
    }
    if (from.has_first_dungeon_house_coord()) {
      mutable_first_dungeon_house_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.first_dungeon_house_coord());
    }
    if (from.has_nb_house_line_dungeon()) {
      set_nb_house_line_dungeon(from.nb_house_line_dungeon());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_nb_line_dungeon()) {
      set_nb_line_dungeon(from.nb_line_dungeon());
    }
    if (from.has_first_walls_house_coord()) {
      mutable_first_walls_house_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.first_walls_house_coord());
    }
    if (from.has_nb_house_line_walls()) {
      set_nb_house_line_walls(from.nb_house_line_walls());
    }
    if (from.has_nb_line_walls()) {
      set_nb_line_walls(from.nb_line_walls());
    }
    if (from.has_first_towers_house_coord()) {
      mutable_first_towers_house_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.first_towers_house_coord());
    }
    if (from.has_nb_house_line_towers()) {
      set_nb_house_line_towers(from.nb_house_line_towers());
    }
    if (from.has_nb_line_towers()) {
      set_nb_line_towers(from.nb_line_towers());
    }
    if (from.has_first_bridge_slot_coord()) {
      mutable_first_bridge_slot_coord()->::boards::RefinedBoard_Coordinates::MergeFrom(from.first_bridge_slot_coord());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_bridge_slots_gap()) {
      set_bridge_slots_gap(from.bridge_slots_gap());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefinedBoard::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefinedBoard::CopyFrom(const RefinedBoard& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefinedBoard::IsInitialized() const {
  if ((_has_bits_[0] & 0xffffffff) != 0xffffffff) return false;
  if ((_has_bits_[1] & 0x00000001) != 0x00000001) return false;
  
  if (has_gate_coord()) {
    if (!this->gate_coord().IsInitialized()) return false;
  }
  if (has_trading_post_coord()) {
    if (!this->trading_post_coord().IsInitialized()) return false;
  }
  if (has_merchant_guild_coord()) {
    if (!this->merchant_guild_coord().IsInitialized()) return false;
  }
  if (has_joust_field_coord()) {
    if (!this->joust_field_coord().IsInitialized()) return false;
  }
  if (has_stables_coord()) {
    if (!this->stables_coord().IsInitialized()) return false;
  }
  if (has_inn_coord()) {
    if (!this->inn_coord().IsInitialized()) return false;
  }
  if (has_fixed_peddler_coord()) {
    if (!this->fixed_peddler_coord().IsInitialized()) return false;
  }
  if (has_fixed_carpenter_coord()) {
    if (!this->fixed_carpenter_coord().IsInitialized()) return false;
  }
  if (has_goldmine_coord()) {
    if (!this->goldmine_coord().IsInitialized()) return false;
  }
  if (has_neutral_1_coord()) {
    if (!this->neutral_1_coord().IsInitialized()) return false;
  }
  if (has_neutral_2_coord()) {
    if (!this->neutral_2_coord().IsInitialized()) return false;
  }
  if (has_neutral_3_coord()) {
    if (!this->neutral_3_coord().IsInitialized()) return false;
  }
  if (has_neutral_4_coord()) {
    if (!this->neutral_4_coord().IsInitialized()) return false;
  }
  if (has_neutral_5_coord()) {
    if (!this->neutral_5_coord().IsInitialized()) return false;
  }
  if (has_neutral_6_coord()) {
    if (!this->neutral_6_coord().IsInitialized()) return false;
  }
  if (has_first_dungeon_house_coord()) {
    if (!this->first_dungeon_house_coord().IsInitialized()) return false;
  }
  if (has_first_walls_house_coord()) {
    if (!this->first_walls_house_coord().IsInitialized()) return false;
  }
  if (has_first_towers_house_coord()) {
    if (!this->first_towers_house_coord().IsInitialized()) return false;
  }
  if (has_first_bridge_slot_coord()) {
    if (!this->first_bridge_slot_coord().IsInitialized()) return false;
  }
  return true;
}

void RefinedBoard::Swap(RefinedBoard* other) {
  if (other != this) {
    std::swap(path_to_image_, other->path_to_image_);
    std::swap(height_, other->height_);
    std::swap(width_, other->width_);
    std::swap(case_height_, other->case_height_);
    std::swap(case_width_, other->case_width_);
    std::swap(gate_coord_, other->gate_coord_);
    std::swap(trading_post_coord_, other->trading_post_coord_);
    std::swap(merchant_guild_coord_, other->merchant_guild_coord_);
    std::swap(joust_field_coord_, other->joust_field_coord_);
    std::swap(stables_coord_, other->stables_coord_);
    std::swap(inn_coord_, other->inn_coord_);
    std::swap(fixed_peddler_coord_, other->fixed_peddler_coord_);
    std::swap(fixed_carpenter_coord_, other->fixed_carpenter_coord_);
    std::swap(goldmine_coord_, other->goldmine_coord_);
    std::swap(neutral_1_coord_, other->neutral_1_coord_);
    std::swap(neutral_2_coord_, other->neutral_2_coord_);
    std::swap(neutral_3_coord_, other->neutral_3_coord_);
    std::swap(neutral_4_coord_, other->neutral_4_coord_);
    std::swap(neutral_5_coord_, other->neutral_5_coord_);
    std::swap(neutral_6_coord_, other->neutral_6_coord_);
    std::swap(house_height_, other->house_height_);
    std::swap(house_width_, other->house_width_);
    std::swap(first_dungeon_house_coord_, other->first_dungeon_house_coord_);
    std::swap(nb_house_line_dungeon_, other->nb_house_line_dungeon_);
    std::swap(nb_line_dungeon_, other->nb_line_dungeon_);
    std::swap(first_walls_house_coord_, other->first_walls_house_coord_);
    std::swap(nb_house_line_walls_, other->nb_house_line_walls_);
    std::swap(nb_line_walls_, other->nb_line_walls_);
    std::swap(first_towers_house_coord_, other->first_towers_house_coord_);
    std::swap(nb_house_line_towers_, other->nb_house_line_towers_);
    std::swap(nb_line_towers_, other->nb_line_towers_);
    std::swap(first_bridge_slot_coord_, other->first_bridge_slot_coord_);
    std::swap(bridge_slots_gap_, other->bridge_slots_gap_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefinedBoard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefinedBoard_descriptor_;
  metadata.reflection = RefinedBoard_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace boards

// @@protoc_insertion_point(global_scope)
